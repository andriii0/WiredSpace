image: gradle:8.10.0-jdk17-jammy

stages:
  - build
  - test
  - build-sonar
  - qodana

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false" #so each build is clear and independent

before_script:
  - echo "Setting JAVA_HOME for GitLab Runner"
  - $env:JAVA_HOME="C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot"
  - $env:Path="$env:JAVA_HOME\bin;$env:Path"
  - java -version

build:
  stage: build
  script:
    - cd WiredSpace-API
    - ./gradlew.bat assemble

test:
  stage: test
  script:
    - cd WiredSpace-API
    - ./gradlew.bat test


build-sonar:
  stage: build-sonar
  environment:
    name: PC
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  script:
    - cd WiredSpace-API
    - >
      if ($env:COMPUTERNAME -eq "Andrii") { $env:SONAR_TOKEN = $env:SONAR_TOKEN_PC;
        echo "Environment detected: PC"

      }
      elseif ($env:COMPUTERNAME -eq "DESKTOP-6QK4NA7") {$env:SONAR_TOKEN = $env:SONAR_TOKEN_LAPTOP;
        echo "Environment detected: Laptop"
      }
      else {
        echo "Unknown environment: $env:COMPUTERNAME";
        exit 1
      }
    - echo "TOKEN:" $env:SONAR_TOKEN
    - echo "TOKEN LENGTH:" $env:SONAR_TOKEN.length
    - ./gradlew.bat test
    - ./gradlew.bat jacocoTestReport
    - ./gradlew.bat "-Dsonar.host.url=$env:SONAR_HOST_URL" "-Dsonar.login=$env:SONAR_TOKEN" sonar
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
#qodana:
#  stage: qodana
#  script:
#    - docker run --rm -v "$($env:CI_PROJECT_DIR)/WiredSpace-API:/data" jetbrains/qodana-jvm qodana --save-report --results-dir=/data/.qodana
