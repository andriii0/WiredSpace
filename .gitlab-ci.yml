image: gradle:8.10.0-jdk17-jammy

stages:
  - build
  - test
  - build-sonar
  - qodana

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

before_script:
  - echo "Setting JAVA_HOME for GitLab Runner"
  - export JAVA_HOME=/opt/java/openjdk
  - export PATH=$JAVA_HOME/bin:$PATH
  - java -version

cache:
  paths:
    - .gradle/wrapper/
    - .gradle/caches/
    - "${SONAR_USER_HOME}/cache"
    - sonar-scanner/

build:
  stage: build
  script:
    - cd WiredSpace-API
    - ./gradlew.bat assemble

test:
  stage: test
  script:
    - cd WiredSpace-API
    - ./gradlew.bat test

build-sonar:
  stage: build-sonar
  script:
    - cd WiredSpace-API
    - ./gradlew sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=YOUR_PROJECT_KEY -Dsonar.host.url=https://your-sonarqube-instance
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

# qodana:
#   stage: qodana
#   script:
#     - docker run --rm -v "$($env:CI_PROJECT_DIR)/WiredSpace-API:/data" jetbrains/qodana-jvm qodana --save-report --results-dir=/data/.qodana
