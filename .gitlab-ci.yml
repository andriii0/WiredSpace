image: gradle:8.10.0-jdk17-jammy

stages:
  - build
  - test
  - cypress-test
  - build-sonar
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false" #so each build is clear and independent

before_script:
  - echo "Setting JAVA_HOME for GitLab Runner"
  - $env:JAVA_HOME="C:\Program Files\Eclipse Adoptium\jdk-17.0.14.7-hotspot"
  - $env:Path="$env:JAVA_HOME\bin;$env:Path"
  - java -version
  - Write-Output "DB_URL=$env:DB_URL"
  - Write-Output "JWT_SECRET=$env:JWT_SECRET"



build:
  stage: build
  script:
    - cd WiredSpace-API
    - ./gradlew.bat assemble

test:
  stage: test
  script:
    - cd WiredSpace-API
    - ./gradlew.bat test

cypress-test:
  stage: cypress-test
  image: node:20
  script:
    - cd wiredspace-frontend
    - npm install
    - powershell -Command "Start-Job { npm run dev; Start-Sleep -Seconds 10 }"
    - Write-Output "Waiting for frontend to start..."
    - for ($i = 0; $i -lt 10; $i++) {
      try {
      $result = Invoke-WebRequest -Uri "http://localhost:5173" -UseBasicParsing -TimeoutSec 2
      if ($result.StatusCode -eq 200) {
      Write-Output "Server is ready!"
      break
      }
      } catch {
      Write-Output "Waiting for server..."
      Start-Sleep -Seconds 5
      }
      }
    - cd ..
    - npm install
    - npx cypress run
  artifacts:
    paths:
      - cypress/results/
    expire_in: 1 hour
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "development"'

build-sonar:
  stage: build-sonar
  environment:
    name: PC
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  script:
    - cd WiredSpace-API
    - echo "TOKEN:" $env:SONAR_TOKEN
    - echo "TOKEN LENGTH:" $env:SONAR_TOKEN.length
    - echo "ALL ENV VARS:"
    - powershell -Command "Get-ChildItem Env:"
    - ./gradlew.bat test
    - ./gradlew.bat jacocoTestReport
    - ./gradlew.bat sonar
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "development"'

deploy:
  stage: deploy
  script:
    - docker compose -f compose.yaml up -d
